8주차 리눅스 플립 파일접근권한 프로세스

ls
-l : 파일속성
*맨 앞에
- 는 data파일
d 는 directory
그 뒤에 붙는 ~~~은 접근권한과 관련
(책 설명 한번읽어보기_교수님)
ex)

rw_ rw_ rw_
rwx --- ---
rwx rw_ r__	//3개씩 묶어서 첫번째묶음은 user(소유자), 두번째는 group, 세번째는 others
//읽기권한r : 읽기복사 , 쓰기권한w : 수정이동삭제 쓰기
//파일의 경우 은 읽기권한,w는 쓰기권한, x는 실행권한, -는 권한없음, 데이터파일의 경우 실행하는 프로그램이 아니므로 x가 없음
//디렉토리의 경우 r: ls할수잇음, w: 디렉토리수정(cp,move..), x: 거쳐갈수잇음(해당파일로 cd, 해당파일/~ 이렇게 주소거쳐가기)
시간은 파일 최종변경시간
그 앞에 숫자는 byte크기
그앞에는 user(파일소유주)와 group(접근권한이 있는 그룹)
그 앞에 숫자는 link머시기

-a : 숨겨진파일


권한 변경
chmod u+x,g+w,o-r 파일명  : user에 실행권한,group에 쓰기권한 추가, others에 읽기권한 삭제
//u=r 은 w,x는 두지말고 r만 줘라 즉, r--
//u: user, g: group, o: others, a : all
//2진수로 하는법
허용을1, 안허용은0으로 하면 110 101 100
이걸 8진수로 바꾸면 654
명령어로 chmod 654 파일명

기본접근권한
변경하기
umask 숫자숫자숫자
ex) umask 077
//마스크값 : 부여하지 않을 권한을 지정해놓는 것
ex)umask 002인 경우
000 000 010이므로 others의 쓰기권한 박탈
-S 옵션 : 문자로 출력  //u=rwx, g=rwx...이런식으로
//umask만 입력시 기본 마스크값 출력

*마스크값 적용과정
1. 일반파일 최대권한 rw-rw-rw-,110 110 110
2. 마스크값(002) 000 000 010
3. 1.에서 2.마스크값의 1인 부분(허용인부분)을 빼주면
4. 110 110 100 //마스킹결과
5. 부여된 권한 664, rw-rw-r--

*형식화된 마스크값
022 : 일반파일644 디렉터리755 // 그룹과 기타사용자는 읽기만 가능
077 : 일반파일600 디렉토리700 // 그룹과 기타사용자 접근권한을 모두 제거
027 : 일반파일640 디렉토리750 // 그룹은 읽기,실행만 가능, 기타는 접근권한 모두제거



특수접근권한
SetUID : others가 프로그램을 실행하는 동안만 user의 권한을 가짐(게임유저가 플레이후 기록을 해야하므로 w권한이 필요한데 기록만 수정하는 악용을 예방)


*
./sh1 을 하면 path에 등록하지 않아도 sh1를 실행함(실행권한 부여해줘야함)

-----------------------------------------------------------------------------

프로세스의 종류
-데몬 프로세스 : 서버같이 계속 살아있어야 하는 프로세스
-고아 프로세스 : 부모프로세스가 먼저 종료된 경우, 1번 프로세스가 부모역할
-좀비 프로세스 : 자식이 종료될때 부모에게 시그널을 보내서 부모가 종료시키는데 그 사이의 상태

시그널 : 프로세스에 메세지를보냄
ex)
kill -9 12279
//-9 : 명령어종류(-9는 강제종료), 12279 : 프로세스id
* ps : 실행중인 프로세스확인명령어(프로세스id도 확인가능_PID)
-l 옵션 : 시그널 목록

top : 현재 실행중인 프로세스 정보를 주기적으로 출력
*내부명령 k : 종료, p : cpu사용량에 따라 정렬출력, q : top종료

포그라운드 : 자식프로세스가 실행되는동안 부모프로세스가 기다리는데(wait/sleep),
이때 자식프로세스가 포그라운드에서 작업되고 있다고 함
백그라운드 : 자식프로세스 실행중에도 부모프로세스가 뜨게 하는 것(안기다림)
자식프로세스가 백그라운드에서 작업됨
// 명령어& : 자식프로세스가 백그라운드에서 작업함
ex)
sleep 5000 : 부모프로세스가 5000초 동안 sleep하게 하는 명령어
sleep 5000& : 백그라운드에서 실행하게함
*ps명령어로 백그라운드 프로세스확인(ps명령어 옵션: 6장)
*
jobs : 백그라운드 프로세스 확인및 제어 
//[1] 작업번호, + 가장최근작업, - +전의작업, Running/done/.. 상태
bg %작업번호 : 해당작업을 백그라운드로 전환
fg %작업번호 : 해당작업을 포그라운드로 전환
ctrl+z / stop %작업번호 : 포그라운드작업 중지(종료x)
ctrl+c : 종료
kill %작업번호 : 강제 종료

nohup 명령& : 로그아웃 후에도 백그라운드에서 작업

at 시간 : 작업예약_정해진 시간에 한번 실행 //date 실행해서 나온 시간형식 참고
//1. at + 시간 
2. 명령
3. ctrl + d : 중지
//atrm 작업번호 : atq로 예약된 명령 확인후 해당번호 예약취소

crontab : 정해진시간에 반복실행
명령어에 시간에서 * 는 상관없음
ex) 30 23 1 * * : 30분 23시 1일 *월 *요일 //30분 23시 1일마다 반복 //모두 *면 1분마다 반복


*루트 명령어 
su - : root로 이동
 su - seluo65 : 원래 id로

*at명령 사용제한
/etc/at.allow가 있으면 허용된 사람외엔 금지, /etc/at.deny가 있으면 거부된사람외에 허용
cat /etc/at.allow로 허용된 사용자 확인


[프로세스기본개념, 자식/부모프로세스관계, ps명령어,kill시그널보내는거]중요

