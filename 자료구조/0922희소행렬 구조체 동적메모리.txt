9/22 자료구조 희소행렬, 구조체
#희소행렬
-대부분의 항들이 0인 배열

-행,열,값 순서로 저장
ex) 1 1 9 = 1행 1열의 값은 9

#구조체
-구조체의 선언과 구조체 변수의 생성
struct person {	//person이라는 이름의 구조체선언
  char name[10];
  int age;
  float height;
};
struct person a;	// a라는 구조체 선언
// 이 구조체의 필드찾아가기 ex) a.age = n 

-typedef를 이용한 구조체선언과 구조체변수생성
typedef struct person{	//typedef맨앞에 붙이기
  char name[10];
  int age;
  float height;
} person;		//구조체 이름 적어주기
person a;		//a라는 구조체 선언

-구조체 변수의 각 필드에 값대입
#include<stdio.h>
#include<string.h>	//strcpy함수 사용때문
int main(){
  person a, b;	//구조체 a와 구조체b 선언
  strcpy(a.name, "Tom");
  a.age = 20;
  a.height = 180.5;

  printf("이름:%s\n", a.name);	//출력확인
  printf("나이:%d\n", a.age);
  printf("키:%.1f\n", a.height);

  b = a;	//구조체a를 구조체b에 복사
}

#자체참조 구조체
-필드중 자기자신을가리키는 포인터가 한개이상 존재하는구조체
-연결리스트나 트리에 많이등장
ex) 
typedef struct ListNode{
  char data[10];
  struct ListNode *link;	//구조체 자기자신을 가리키는 포인터 선언
} ListNode;  

#동적메모리
ex)
#include<stdio.h>
#include <stdlib.h>	//emalloc함수필요
int main(void){
  int *pi;		//pi라는 포인터 선언
  pi = (int *)malloc(sizeof(int));   //정수sizeof만큼 저장할공간을 할당할 주소를 pi에 저장 즉, 포인터변수pi초기화
  printf("pi = %d\n", pi);	//주소 출력
  *pi = 10;
  printf("*pi = %d", *pi);	//포인터pi를 이용해 변경한 값출력
  
  free(pi);		//주소값 pi에 할당된 공간 풀어주기
  pi = (int *)malloc(2*sizeof(int ));	// '' 공간을 2개 만들기, 배열처럼활용가능
  pi[0] = 10;	// *pi = 10;
  pi[1] = 20;	// *(pi+1) = 20;

  return 0;
}